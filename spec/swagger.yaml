swagger: '2.0'
info:
  version: '1.0'
  title: RBKmoney Webhooks Events API
  termsOfService: 'http://rbkmoney.com/'
  contact:
    name: RBKmoney support team
    email: tech-support@rbkmoney.com
    url: 'https://api.rbk.money'
  description: >
    ## Webhooks Events API

    Данная спецификация определяет формат сообщений, которые платформа отправляет на созданные вами Webhook-endpoints, обработчики которых необходимо реализовать на стороне вашего серверного кода.
    Для управления webhook`ами используются методы RBKmoney API, описанные в спецификации [RBKmoney Webhooks Management API](https://rbkmoney.github.io/api#Webhooks).

    ## Invoice Webhooks

    Webhook — это подписка на определенное событие либо их группу в платформе RBKmoney. Когда наступает одно из событий в рамках определенного инвойса (например, изменение статуса инвойса или платежа), платформа выбирает подходящие webhook`и и отправляет HTTP POST запрос, содержащий JSON-payload на указанные вами URL. Если подходящих
    подписок несколько, то события отправляются параллельно на все адреса.

    ## Терминология

      Запрос — HTTP-запрос серверов платформы к серверам, обслуживающим ваш серверный код с информацией о событии. 
      Ответ — HTTP-ответ вашего серверного кода на HTTP-запрос от платформы. Запрос на доставку считается успешным только при получении HTTP-кода со статусом "200". В случае ответа любым другим кодом статуса платформа будет применять стратегию переотправки запросов до получения успешного ответа, либо до принятия решения о невозможности доставить информацию.

    ## Стратегия очереди отправки сообщений

    Если ваш серверный код отвечает HTTP-кодом со статусом, отличным от "200", то платформа будет переотправлять событие 4 раза с интервалами:

      - 30 секунд
      - 5 минут
      - 15 минут
      - 1 час

    Очередность отправки событий при этом гарантируется платформой, никакие события не могут быть пропущены. Если четвертая попытка отправить сообщение оканчивается неудачей, Webhook помечается как выключенный и очередь сообщений для него сбрасывается.

    ## Авторизация полученных Webhook`ов

      Платежная система подтверждает свою подлинность, подписывая сообщения приватным ключом RSA с алгоритмом хеширования SHA-256. Приватный и публичный ключи задаются в настройках webhook`а. Подпись передается в HTTP-заголовке X-Signature в формате Base64.

    ## Список передаваемых типов событий:

      - в рамках инвойса

      |    |    |
      | -- | -- |
      | InvoiceCreated | Создан новый инвойс |
      | InvoicePaid | Инвойс перешел в состояние "Оплачен" |
      | InvoiceCancelled | Инвойс отменен по истечению срока давности |
      | InvoiceFulfilled | Инвойс успешно погашен |

      - в рамках платежа

      |    |    |
      | -- | -- |
      | PaymentStarted | Создан платеж |
      | PaymentProcessed | Платеж принят на обработку | 
      | PaymentCaptured | Платеж успешно завершен |
      | PaymentCancelled | Платеж отменен |
      | PaymentFailed | При проведении платежа возникла ошибка |


schemes:
  - https
consumes:
  - application/json; charset=utf-8
produces:
  - application/json; charset=utf-8
parameters:
  requestID:
    name: X-Request-ID
    in: header
    description: Уникальный идентификатор запроса к системе
    required: true
    type: string
    maxLength: 32
  xsignature:
    name: X-Signature
    in: header
    description: >
      Подпись сообщения, созданная приватным ключом RSA с алгоритмом хеширования SHA-256 и размером ключа 1024.
    required: true
    type: string
tags:
- name: EventProcessing
  description: Обработка сообщения по событию платежной системы
paths:
  "/webhook-url":
    post:
      tags:
      - EventProcessing
      summary: Обработка сообщения по событию платежной системы
      operationId: processWebhookEvent
      parameters:
      - $ref: "#/parameters/requestID"
      - $ref: "#/parameters/xsignature"
      - in: body
        name: invoiceInfo
        description: Тело запроса, содержащее необходимую информацию о событии
        required: true
        schema:
          "$ref": "#/definitions/EventInfo"
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/EventInfoResponse"
definitions:
  EventInfo:
    description: Тело информации о событии в системе
    type: object
    required:
      - eventId
      - eventTime
      - eventType
    properties:
      eventId:
        description: Идентификатор события в системе
        type: string
      eventTime:
        description: Дата и время события
        type: string
        format: date-time
      eventType:
        description: Тип события (один из списка возможных типов событий)
        enum:
          - InvoiceCreated
          - InvoicePaid
          - InvoiceCancelled
          - InvoiceFulfilled
          - PaymentStarted
          - PaymentProcessed
          - PaymentCaptured
          - PaymentCancelled
          - PaymentFailed
      payload:
        schema:
          $ref: "#/definitions/InvoiceInfo"
  InvoiceInfo:
    description: Тело с детальной инфомацией об инвойсе
    type: object
    required:
      - amount
      - createdAt
      - currency
      - invoiceId
      - metadata
      - shopId
      - status
    properties:
      amount:
        description: Стоимость в минорных денежных единицах
        type: integer
        format: int64
      createdAt:
        description: Дата и время создания
        type: string
        format: date-time
      currency:
        description: |
          Валюта, символьный код согласно
          [RFC 4217](http://www.iso.org/iso/home/standards/currency_codes.htm).
        type: string
      invoiceId:
        description: Идентификатор инвойса
        type: string
      metadata:
        description: Связанные с инвойсом метаданные
        type: object
      shopId:
        description: Идентификатор магазина
        type: integer
        format: int32
      status:
        description: Статус инвойса
        type: string
        enum:
          - unpaid
          - cancelled
          - paid
          - refunded
          - fulfilled
  PaymentInfo:
    description: Тело с детальной инфомацией о платеже
    type: object
    required:
      - amount
      - createdAt
      - currency
      - invoiceId
      - paymentId
      - metadata
      - shopId
      - status
    properties:
      amount:
        description: Стоимость в минорных денежных единицах
        type: integer
        format: int64
      createdAt:
        description: Дата и время создания
        type: string
        format: date-time
      currency:
        description: |
          Валюта, символьный код согласно
          [RFC 4217](http://www.iso.org/iso/home/standards/currency_codes.htm).
        type: string
      invoiceId:
        description: Идентификатор инвойса
        type: string
      metadata:
        description: Связанные с инвойсом метаданные
        type: object
      paymentId:
        description: Идентификатор платежа
        type: string
      shopId:
        description: Идентификатор магазина
        type: integer
        format: int32
      status:
        description: Статус платежа
        type: string
        enum:
          - pending
          - processed
          - captured
          - cancelled
          - failed
  EventInfoResponse:
    type: object
    properties:
      message:
        description: Дополнительная информация
        type: string
