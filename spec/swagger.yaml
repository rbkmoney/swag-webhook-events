swagger: '2.0'
info:
  version: '1.0'
  title: Webhook events documentation
  termsOfService: 'http://rbkmoney.com/'
  contact:
    name: RBKmoney support team
    email: support@rbk.money
    url: 'https://api.rbk.money'
  description: >
    Документация описывает формат сообщений, отправляемых мерчанту на определенные события,
    происходящие в платежной системе (например, изменение статуса инвойса или платежа).
    Вебхук — это подписка на такое событие в системе. Он представляет собой url-адрес, тип события и набор фильтров.
    Когда наступает одно из событий, платежная система выбирает подходящие вебхуки и рассылает сообщения на указанные в них url-адреса.
    Если подходящих подписок несколько, то события отправляются параллельно на все адреса.
    Список возможных типов событий -
               - InvoiceCreated
               - InvoicePaid
               - InvoiceCancelled
               - InvoiceFulfilled
               - PaymentStarted
               - PaymentProcessed
               - PaymentCaptured
               - PaymentCancelled
               - PaymentFailed
    Запрос — HTTP-запрос сервера платежной системы к системе мерчанта с информацией о событии.
    Ответ — HTTP-ответ системы мерчанта на запрос от сервера платежной системы.

    Безопасность.
    Платежная система подтверждает свою подлинность, подписывая сообщения приватным ключом RSA с алгоритмом хэширования SHA-256.
    Приватный и публичный ключи задаются в настройках вебхука.
    Подпись передается в HTTP-заголовке X-Signature в формате Base64.

    Очередь отправки.
    Если url-адрес вебхука отвечает http-кодом, отличным от 200, то сервер платежной системы
    будет переотправлять событие 4 раза с интервалами 30сек, 5мин, 15мин, 1час.
    Очередность отправки событий при этом сохраняется - это означает, что события копятся в очереди и что никакие события не могут быть пропущены.
    Если и четвертая попытка отправить сообщение оканчивается неудачей, вебхук помечается как выключеный и очередь сообщений для него сбрасывается.
    Больше попыток отправить на вебхук сообщения не предпринимается.
schemes:
  - https
consumes:
  - application/json; charset=utf-8
produces:
  - application/json; charset=utf-8
parameters:
  requestID:
    name: X-Request-ID
    in: header
    description: Уникальный идентификатор запроса к системе
    required: true
    type: string
    maxLength: 32
  xsignature:
    name: X-Signature
    in: header
    description: Подпись сообщения, созданная приватным ключом RSA с алгоритмом хэширования SHA-256 и размером ключа 1024.
    required: true
    type: string
tags:
- name: EventProcessing
  description: Обработка сообщения по событию платежной системы
paths:
  "/webhook-url":
    post:
      tags:
      - EventProcessing
      summary: Обработка сообщения по событию платежной системы
      operationId: processWebhookEvent
      parameters:
        - $ref: '#/parameters/requestID'
        - $ref: '#/parameters/xsignature'
        - in: body
          name: eventInfo
          description: Тело запроса, содержащее необходимую информацию о событии
          required: true
          schema:
            $ref: "#/definitions/EventInfo"
      responses:
        '200':
          description: OK
definitions:
  EventInfo:
    description: Тело информации о событии в системе
    type: object
    required:
      - eventId
      - eventTime
      - eventType
      - payload
    properties:
      eventId:
        description: Идентификатор события в системе
        type: string
      eventTime:
        description: Дата и время события
        type: string
        format: date-time
      eventType:
        description: Тип события (один из списка возможных типов событий)
        enum:
          - InvoiceCreated
          - InvoicePaid
          - InvoiceCancelled
          - InvoiceFulfilled
          - PaymentStarted
          - PaymentProcessed
          - PaymentCaptured
          - PaymentCancelled
          - PaymentFailed
      payload:
        $ref: '#/definitions/Payload'
  Payload:
    type: object
    description: Базовая модель
    discriminator: payloadType
    required:
      - payloadType
    properties:
      payloadType:
        type: string
  InvoiceInfo:
    allOf:
      - $ref: '#/definitions/Payload'
      - type: object
        description: Тело с детальной информацией об инвойсе
        required:
          - amount
          - createdAt
          - currency
          - invoiceId
          - metadata
          - shopId
          - partyId
          - status
        properties:
          amount:
            description: Стоимость в минорных денежных единицах
            type: integer
            format: int64
            minimum: 1
          createdAt:
            description: Дата и время создания
            type: string
            format: date-time
          currency:
            description: |
              Валюта, символьный код согласно
              [RFC 4217](http://www.iso.org/iso/home/standards/currency_codes.htm).
            type: string
          invoiceId:
            description: Идентификатор инвойса
            type: string
          metadata:
            description: Связанные с инвойсом метаданные
            type: object
          shopId:
            description: Идентификатор магазина
            type: integer
            format: int32
          partyId:
            description: Идентификатор участника
            type: string
          status:
            description: Статус инвойса
            type: string
            enum:
              - unpaid
              - cancelled
              - paid
              - refunded
              - fulfilled
          product:
            description: Наименование предлагаемых товаров или услуг
            type: string
          description:
            description: Описание предлагаемых товаров или услуг
            type: string
  PaymentInfo:
    allOf:
      - $ref: '#/definitions/Payload'
      - type: object
        description: Тело с детальной инфомацией о платеже
        required:
          - amount
          - createdAt
          - currency
          - invoiceId
          - paymentId
          - metadata
          - shopId
          - partyId
          - status
        properties:
          amount:
            description: Стоимость в минорных денежных единицах
            type: integer
            format: int64
            minimum: 1
          createdAt:
            description: Дата и время создания
            type: string
            format: date-time
          currency:
            description: |
              Валюта, символьный код согласно
              [RFC 4217](http://www.iso.org/iso/home/standards/currency_codes.htm).
            type: string
          invoiceId:
            description: Идентификатор инвойса
            type: string
          metadata:
            description: Связанные с инвойсом метаданные
            type: object
          paymentId:
            description: Идентификатор платежа
            type: string
          shopId:
            description: Идентификатор магазина
            type: integer
            format: int32
          partyId:
            description: Идентификатор участника
            type: string
          status:
            description: Статус платежа
            type: string
            enum:
              - pending
              - processed
              - captured
              - cancelled
              - failed
